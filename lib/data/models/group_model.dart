import 'package:equatable/equatable.dart';
import 'package:chat_app/data/models/user_model.dart';

class GroupModel extends Equatable {
  final String id;
  final String name;
  final String? avatarUrl;
  final String createdBy; // User ID of the creator
  final DateTime createdAt;
  final List<UserModel>? members; // Optional: Can be loaded separately

  const GroupModel({
    required this.id,
    required this.name,
    this.avatarUrl,
    required this.createdBy,
    required this.createdAt,
    this.members,
  });

  factory GroupModel.fromMap(Map<String, dynamic> map, {List<UserModel>? groupMembers}) {
    return GroupModel(
      id: map['id'] as String,
      name: map['name'] as String,
      avatarUrl: map['avatar_url'] as String?,
      createdBy: map['created_by'] as String,
      createdAt: DateTime.parse(map['created_at'] as String),
      members: groupMembers,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      // 'id': id, // Usually generated by Supabase
      'name': name,
      'avatar_url': avatarUrl,
      'created_by': createdBy,
      // 'created_at': createdAt.toIso8601String(), // Usually handled by Supabase
    };
  }

  @override
  List<Object?> get props => [id, name, avatarUrl, createdBy, createdAt, members];
}